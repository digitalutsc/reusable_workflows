# This is a basic workflow to help you get started with Actions
# Based on https://github.com/Islandora/islandora/blob/c1aa0a5f2f593440b607b73245e103a9b6626371/.github/workflows/build-2.x.yml

name: CI

# Controls when the action will run.
on:
  workflow_call:
    inputs:
      module_name:
        required: true
        type: string
      composer_name:
        required: true
        type: string
      test_suite:
        required: false
        type: string
        default: functional,unit,kernel
      phpunit_path:
        required: false
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php-versions: ["7.3", "7.4", "8.0", "8.1"]
        drupal-version: ["9.3.x", "9.4.x-dev"]
        mysql: ["5.7"]
        experimental: [false]
        include:
          - php-versions: 8.1
            drupal-version: 10.0.x-dev
            mysql: 5.7
            experimental: true

    name: PHP ${{ matrix.php-versions }} | drupal ${{ matrix.drupal-version }} | mysql ${{ matrix.mysql }}

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: drupal
        ports:
          - 3306:3306

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: build_dir

      - name: Checkout islandora_ci
        uses: actions/checkout@v2
        with:
          repository: digitalutsc/islandora_ci
          ref: github-actions
          path: islandora_ci

      - name: Checkout reusable_workflows
        if: inputs.phpunit_path == ''
        uses: actions/checkout@v2
        with:
          repository: digitalutsc/reusable_workflows
          path: reusable_workflows

      - name: Replace module name
        if: inputs.phpunit_path == ''
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "passing_tests"
          replace: ${{ inputs.module_name }}
          regex: false
          include: $GITHUB_WORKSPACE/reusable_workflows/phpunit.xml

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2

      - name: Setup Mysql client
        run: |
          sudo apt-get update
          sudo apt-get remove -y mysql-client mysql-common
          sudo apt-get install -y mysql-client

      - name: Set environment variables
        run: |
          echo "DRUPAL_VERSION=${{ matrix.drupal-version }}" >> $GITHUB_ENV
          echo "SCRIPT_DIR=$GITHUB_WORKSPACE/islandora_ci" >> $GITHUB_ENV
          echo "DRUPAL_DIR=/opt/drupal" >> $GITHUB_ENV
          echo "PHPUNIT_FILE=$GITHUB_WORKSPACE/build_dir/${{ inputs.phpunit_path }}" >> $GITHUB_ENV

      - name: Set default phpunit file
        if: inputs.phpunit_path == ''
        run: echo "PHPUNIT_FILE=$GITHUB_WORKSPACE/reusable_workflows/phpunit.xml" >> $GITHUB_ENV

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Setup Drupal
        timeout-minutes: 10
        run: |
          mkdir $DRUPAL_DIR
          $SCRIPT_DIR/travis_setup_drupal.sh
          cd $DRUPAL_DIR
          chmod -R u+w web/sites/default
          mkdir -p web/sites/simpletest/browser_output

      - name: Setup composer paths
        run: |
          git -C "$GITHUB_WORKSPACE/build_dir" checkout -b github-testing
          cd $DRUPAL_DIR
          composer config repositories.local path "$GITHUB_WORKSPACE/build_dir"
          composer config minimum-stability dev
          composer require "${{ inputs.composer_name }}"

      - name: Install modules
        run: |
          cd $DRUPAL_DIR/web
          drush --uri=127.0.0.1:8282 en -y ${{ inputs.module_name }}

      - name: Copy PHPunit file
        run: cp $PHPUNIT_FILE $DRUPAL_DIR/web/core/phpunit.xml

      - name: Test scripts
        run: $SCRIPT_DIR/travis_scripts.sh

      - name: Install drupal-check
        run: composer global require mglaman/drupal-check

      - name: Run drupal-check
        continue-on-error: true
        run: |
          drupal-check --drupal-root $DRUPAL_DIR $GITHUB_WORKSPACE/build_dir

      - name: PHPUNIT tests
        run: |
          cd $DRUPAL_DIR/web/core
          $DRUPAL_DIR/vendor/bin/phpunit --verbose --testsuite "${{ inputs.test_suite }}"
